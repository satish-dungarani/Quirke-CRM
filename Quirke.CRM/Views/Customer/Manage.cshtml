@model CustomerModel

@{
    ViewData["Title"] = Model.Id == 0 ? "Create Customer" : "Edit Customer";
}

<section class="content pt-3">
    <div class="container-fluid">
        <div class="card card-default color-palette-box">
            <div class="card-header">
                <h1 class="card-title">
                    @* <i class="fas fa-tag"></i> *@
                    Customers - @ViewData["Title"]
                </h1>
                <a class="btn btn-primary  btn-sm float-right ml-2" href="@Url.Action("Index","Customer")">Back to list</a>

            </div>
            <div class="card-body">
                <form asp-action="Manage" method="post" id="customerForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Firstname" class="control-label"></label>
                                <input asp-for="Firstname" class="form-control" />
                                <span asp-validation-for="Firstname" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Lastname" class="control-label"></label>
                                <input asp-for="Lastname" class="form-control" />
                                <span asp-validation-for="Lastname" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Gender" class="control-label"></label>
                                <select asp-for="Gender" class="form-control">
                                    <option value="">Select Gender</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                    <option value="Other">Other</option>
                                </select>
                                <span asp-validation-for="Gender" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="BirtDate" class="control-label"></label>
                                <input asp-for="BirtDate" class="form-control" />
                                <span asp-validation-for="BirtDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Mobile" class="control-label"></label>
                                <input asp-for="Mobile" class="form-control clsMobileNumber" />
                                <span asp-validation-for="Mobile" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Email" class="control-label"></label>
                                <input asp-for="Email" class="form-control" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group text-center">
                        <button type="submit" class="btn btn-success"><i class="fa fa-save mr-2"></i>Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<script src="~/lib/jquery/jquery.min.js"></script>
<script src="~/lib/jquery-validation/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation/additional-methods.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>

@if (Model.Id > 0)
{
    <section class="content pt-3">
        <div class="container-fluid">
            <div class="card card-default color-palette-box">
                <div class="card-header">
                    <h1 class="card-title"><b>Customer Compliance</b></h1>
                    <a class="btn btn-warning  btn-sm float-right ml-2" href="@Url.Action("ManageCompliance","Customer", new {customerId = Model.Id})">Add Compliance</a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="complianceTable" class="table table-striped table-bordered" style="width:100%">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Sr No.</th>
                                    <th>Status</th>
                                    <th>Test Date</th>
                                    <th>Observed By</th>
                                    <th>Can Take Service</th>
                                    <th>Allergy Test Done</th>
                                    <th>Is Valid?</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="content pt-3">
        <div class="container-fluid">
            <div class="card card-default color-palette-box">
                <div class="card-header">
                    <h1 class="card-title"><b>Customer Records</b></h1>
                    <button class="btn btn-info  btn-sm float-right ml-2" onclick="funManageCustomerRecord(null);">Add Record</button>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="customerRecordTable" class="table table-striped table-bordered" style="width:100%">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Sr No.</th>
                                    <th>Product Name</th>
                                    <th>Treatment Name</th>
                                    <th>Service Date</th>
                                    <th>Strength</th>
                                    <th>Development Time</th>
                                    <th>Remark</th>
                                    <th>Attended Employee</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="modal fade" id="commonModalCenter" tabindex="-1" role="dialog" aria-labelledby="commonModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content" id="divCommonModel"></div>
        </div>
    </div>

    <script>
        var myModal = new bootstrap.Modal(document.getElementById('commonModalCenter'));
        var dtTable;
        var dtTable1;

        $(document).ready(function () {

            funComplianceGrid();

            funCustomerRecordGrid();

            $(window).resize(() => {
                setTimeout(function () {
                    $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
                }, 200);
            });
        });

        function funComplianceGrid() {
            if (dtTable1) {
                dtTable1.destroy();
            }
            dtTable1 = $('#complianceTable').DataTable({
                "processing": true,
                "serverSide": false,
                "ajax": {
                    "url": '@Url.Action("GetCustomerCompliances", "Customer", new { customerId = Model.Id })',
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": null,
                        "className": "text-center noExport",
                        "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },
                    { "data": "ComplianceStatus" },
                    { "data": "DispTestDate" },
                    { "data": "ObservedBy" },
                    { "data": "CanTakeService" },
                    { "data": "IsAllergyTestDone" },
                    {
                        "data": null,
                        "className": "text-center noExport",
                        "render": function (data, type, full, meta) {
                            if (full.IsValid) {
                                return '<span class="badge badge-success">Active</span>';
                            } else {
                                return '<span class="badge badge-danger">Expired</span>';
                            }
                        }
                    },
                    {
                        "data": null,
                        "className": "",
                        "render": function (data, type, full, meta) {
                            if (full.IsValid) {
                                return '<a class="btn btn-secondary btn-sm mr-2" href="/Customer/ManageCompliance?customerId=' + full.CustomerId + '&id=' + full.Id + '"><i class="fas fa-pen"></i> Edit</a>' +
                                    '<a class="btn btn-danger btn-sm" href="/Customer/DeleteCompliance?customerId=' + full.CustomerId + '&id=' + full.Id + '"><i class="fas fa-trash"></i> Delete</a>';
                            } else {
                                return '<a class="btn btn-info btn-sm" href="/Customer/ViewCompliance?customerId=' + full.CustomerId + '&id=' + full.Id + '"><i class="fas fa-eye"></i> View</a>';
                            }
                        }
                    }
                ],
                fixedHeader: true,
                responsive: true,
                scrollCollapse: true,
                scrollY: '50vh',
                scrollX: true,
                deferRender: true,
                scroller: true,
                autoWidth: true,
                searching: false,
                pageLength: 10,
                lengthChange: false,
                layout: {
                    topStart: {
                        buttons: []
                    },
                    bottom: ['paging'],
                    bottomStart: null,
                    bottomEnd: null,
                }
            });
        }

        function funCustomerRecordGrid() {

            if (dtTable) {
                dtTable.destroy();
            }
            dtTable = $('#customerRecordTable').DataTable({
                "processing": true,
                "serverSide": false,
                "ajax": {
                    "url": '@Url.Action("GetAllCustomerRecordData", "Customer", new { customerId = Model.Id })',
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": null,
                        "className": "text-center",
                        "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },
                    { "data": "ProductName" },
                    { "data": "TreatmentName" },
                    { "data": "DispServiceDate" },
                    { "data": "Strength" },
                    { "data": "DevTime" },
                    { "data": "Remark" },
                    { "data": "AttendedEmployeeName" },
                    {
                        "render": function (data, type, full, meta) {
                            return '<button class="btn btn-secondary btn-sm mr-2" onclick="funManageCustomerRecord(' + full.Id + ')" ><i class="fas fa-pen"></i> Edit</button>' +
                                '<button class="btn btn-danger btn-sm" onclick="funDeleteCustomerRecord(' + full.Id + ')" ><i class="fas fa-trash"></i> Delete</button>';
                        }
                    }
                ],
                fixedHeader: true,
                responsive: true,
                scrollCollapse: true,
                scrollY: '50vh',
                scrollX: true,
                deferRender: true,
                scroller: true,
                autoWidth: true,
                searching: false,
                pageLength: 10,
                lengthChange: false,
                layout: {
                    topStart: {
                        buttons: []
                    },
                    bottom: ['paging'],
                    bottomStart: null,
                    bottomEnd: null,
                }
            });
        }

        function funManageCustomerRecord(_id) {

            $.ajax({
                url: '@Url.Action("ManageCustomerRecord", "Customer")',
                type: 'GET',
                dataType: 'html',
                data: {
                    customerId: '@Model.Id',
                    id: _id,
                },
                success: function (data) {
                    $("#divCommonModel").html('');
                    $("#divCommonModel").html(data);
                    myModal.show();
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function funDeleteCustomerRecord(_id) {
            $.ajax({
                url: '@Url.Action("DeleteCustomerRecord", "Customer")',
                type: 'GET',
                dataType: 'json',
                data: {
                    id: _id,
                },
                success: function (response) {
                    if (response.result) {
                        funCustomerRecordGrid();
                        Swal.fire({
                            title: 'Success!',
                            text: response.msg,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function funCloseModal() {
            funCustomerRecordGrid();
            myModal.hide();
        };
    </script>
}


