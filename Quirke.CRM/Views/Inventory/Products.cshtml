@model ProductModel

@{
    ViewData["Title"] = "Products";
}

<section class="content pt-3">
    <div class="container-fluid">
        <div class="card card-default color-palette-box">
            <div class="card-header">
                <h1 class="card-title">
                    <b>Product List</b>
                </h1>
                <button class="btn btn-primary btn-sm float-right" onclick="funManageProduct(null)">
                    <i class="fas fa-plus"></i> Add Product
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="productsTable" class="table table-striped table-bordered" style="width:100%">
                        <thead class="thead-dark">
                            <tr>
                                <th>Sr No.</th>
                                <th>Name</th>
                                <th>Brand</th>
                                <th>Supplier</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Is Active</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade" id="commonModalCenter" tabindex="-1" role="dialog" aria-labelledby="commonModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" id="divCommonModel"></div>
    </div>
</div>

<!-- Scripts -->
<script src="~/quirke/js/jquery-3.6.0.min.js"></script>

<!-- Add jQuery UI JS -->

<script src="~/quirke/js/jquery-ui.min.js"></script>
<script src="~/quirke/js/bootstrap.bundle.min.js"></script>

<script type="text/javascript">
    var myModal = new bootstrap.Modal(document.getElementById('commonModalCenter'));
    var dtTable;

    $(document).ready(function () {
        funGridProduct();
        $(window).resize(() => {
            setTimeout(function () {
                $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
            }, 200);
        });
    });

    function funGridProduct() {
        if (dtTable) {
            dtTable.destroy();
        }
        dtTable = $('#productsTable').DataTable({
            "processing": true,
            "serverSide": false,
            "ajax": {
                "url": "@Url.Action("GetAllProductData", "Inventory")",
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                {
                    "data": null,
                    "className": "text-center",
                    "render": function (data, type, full, meta) {
                        return meta.row + 1;
                    }
                },
                { "data": "Name" },
                { "data": "BrandName" },
                { "data": "SupplierName" },
                { "data": "Price", "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                { "data": "QuantityInStock" },
                {
                    "data": "IsActive",
                    "className": "text-center",
                    "render": function (data) {
                        return data ? '<span class="badge badge-success">Active</span>' : '<span class="badge badge-danger">Inactive</span>';
                    }
                },
                {
                    "render": function (data, type, full, meta) {
                        return '<button class="btn btn-secondary btn-sm mr-2" onclick="funManageProduct(' + full.Id + ')" ><i class="fas fa-pen"></i> Edit</button>' +
                            '<button class="btn btn-danger btn-sm" onclick="funDeleteProduct(' + full.Id + ')" ><i class="fas fa-trash"></i> Delete</button>';
                    }
                }
            ],
            fixedHeader: true,
            responsive: true,
            scrollCollapse: true,
            scrollY: '50vh',
            scrollX: true,
            deferRender: true,
            scroller: true,
            autoWidth: true,
            layout: {
                topStart: {
                    buttons: [
                        {
                            extend: 'excel',
                            className: 'btn btn-outline-dark btn-sm',
                            exportOptions: {
                                columns: ':not(:last-child)' // Exclude the last column (actions) from the export
                            }
                        },
                        {
                            extend: 'pdf',
                            className: 'btn btn-outline-dark btn-sm',
                            exportOptions: {
                                columns: ':not(:last-child)' // Exclude the last column (actions) from the export
                            }
                        }
                    ]
                },
                bottom: ['paging'],
                bottomStart: null,
                bottomEnd: null,
            }
        });
    }

    function funManageProduct(_id) {
        $.ajax({
            url: '@Url.Action("ManageProduct", "Inventory")',
            type: 'GET',
            dataType: 'html',
            data: {
                id: _id,
            },
            success: function (data) {
                $("#divCommonModel").html('');
                $("#divCommonModel").html(data);
                myModal.show();
            },
            error: function (error) {
                console.error("Error:", error);
            }
        });
    }

    function funDeleteProduct(_id) {
        
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to delete this record? This action cannot be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteProduct", "Inventory")',
                    type: 'GET',
                    dataType: 'json',
                    data: {
                        id: _id,
                    },
                    success: function (response) {
                        if (response.result) {
                            funGridProduct();
                            Swal.fire({
                                title: 'Success!',
                                text: response.msg,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (error) {
                        Swal.fire('Error', 'Something went wrong!', 'error');
                    }
                });
            } else {
                Swal.fire('Cancelled', 'Your data is safe', 'info');
            }
        });
    }

    function funCloseModal() {
        funGridProduct();
        myModal.hide();
    }
</script>
