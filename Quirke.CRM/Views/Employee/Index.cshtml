@{
    ViewData["Title"] = "Employees";
}

<section class="content pt-3">
    <div class="container-fluid">
        <div class="card card-default color-palette-box">
            <div class="card-header">
                <h1 class="card-title">
                    @* <i class="fas fa-tag"></i> *@
                    <b>Employee List</b>
                </h1>
                <a class="btn btn-primary btn-sm float-right" href="@Url.Action("Manage", "Employee")">
                    <i class="fas fa-plus"></i> Add Employee
                </a>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="employeesTable" class="table table-striped table-bordered" style="width:100%">
                        <thead class="thead-dark">
                            <tr>
                                <th>Sr No.</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Birth Date</th>
                                <th>Gender</th>
                                <th>Phone</th>
                                <th>Email</th>
                                <th>Hire Date</th>
                                <th>Job Title</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/quirke/js/jquery-3.6.0.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#employeesTable').DataTable({
            "processing": true,
            "serverSide": false,
            "ajax": {
                "url": "@Url.Action("GetEmployees", "Employee")",
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                {
                    "data": null,
                    "className": "text-center noExport",
                    "render": function (data, type, full, meta) {
                        return meta.row + 1; // Add 1 because meta.row starts at 0
                    }
                },
                { "data": "Firstname" },
                { "data": "Lastname" },
                {
                    "data": "BirthDate",
                    "render": function (data) {
                        return moment(data).format('MM/DD/YYYY'); // Format date using moment.js
                    }
                },
                { "data": "Gender" },
                { "data": "PhoneNumber" },
                { "data": "Email" },
                {
                    "data": "HireDate",
                    "render": function (data) {
                        return moment(data).format('MM/DD/YYYY'); // Format date using moment.js
                    }
                },
                { "data": "JobTitle" },
                {
                    "render": function (data, type, full, meta) {
                        var _html = '';
                        _html += '<a class="btn btn-secondary btn-sm mr-2" href="/employee/manage/' + full.Id + '">Edit  &nbsp; <i class="fas fa-pen"></i></a>';
                        _html += '<a class="btn btn-danger btn-sm delete-button" href="/employee/delete/' + full.Id + '">Delete  &nbsp; <i class="fas fa-trash"></i></a>';
                        return _html;
                    }
                }
            ],
            fixedHeader: true,
            responsive: true,
            scrollCollapse: true,
            scrollY: '50vh',
            scrollX: true,
            deferRender: true,
            scroller: true,
            autoWidth: true,
            layout: {
                topStart: {
                    buttons: [
                        {
                            extend: 'excel',
                            className: 'btn btn-outline-dark btn-sm',
                            exportOptions: {
                                columns: ':not(:last-child)' // Exclude the last column (actions) from the export
                            }
                        },
                        {
                            extend: 'pdf',
                            className: 'btn btn-outline-dark btn-sm',
                            exportOptions: {
                                columns: ':not(:last-child)' // Exclude the last column (actions) from the export
                            }
                        }
                    ]
                },
                bottom: ['paging'],
                bottomStart: null,
                bottomEnd: null,
            }
        });

        $(window).resize(() => {
            setTimeout(function () {
                $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
            }, 200);
        });
    });
</script>
