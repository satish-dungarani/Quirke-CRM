@{
    ViewData["Title"] = "Masters";
    int typeId = Convert.ToInt32(ViewBag.MasterTypeId);
    string type = Enum.GetName(typeof(MasterType), typeId);
}

<section class="content pt-3">
    <div class="container-fluid">
        <div class="card card-default color-palette-box">
            <div class="card-header">
                <h1 class="card-title">Master - @type</h1>
                <button class="btn btn-primary btn-sm float-right" data-toggle="modal" data-target="#commonModalCenter" onclick="funManageMaster(null)">Add @type  &nbsp; <i class="fas fa-plus"></i></button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="brandTable" class="table table-striped table-bordered" style="width:100%">
                        <thead class="thead-dark">
                            <tr>
                                <th>Sr No.</th>
                                <th>@type Name</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade" id="commonModalCenter" tabindex="-1" role="dialog" aria-labelledby="commonModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commonModalCenterTitle">@type</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="divCommonModel"></div>
        </div>
    </div>
</div>

<!-- Scripts -->
<script src="~/quirke/js/jquery-3.6.0.min.js"></script>

<!-- Add jQuery UI JS -->

<script src="~/quirke/js/jquery-ui.min.js"></script>
<script src="~/quirke/js/bootstrap.bundle.min.js"></script>

<script>
    var myModal = new bootstrap.Modal(document.getElementById('commonModalCenter'));
    var dtTable;
    $(document).ready(function () {
        funGridMaster();
        $(window).resize(() => {
            setTimeout(function () {
                $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
            }, 200);
        });
    });

    function funGridMaster() {
        if (dtTable) {
            dtTable.destroy();
        };
        dtTable = $('#brandTable').DataTable({
            "processing": true,
            "serverSide": false,
            "ajax": {
                "url": '@Url.Action("GetMaster", "Master", new { typeId = @typeId })',
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                {
                    "data": null,
                    "className": "text-center",
                    "render": function (data, type, full, meta) {
                        return meta.row + 1;
                    }
                },
                { "data": "Name" },
                {
                    "data": null,
                    "className": "",
                    "render": function (data, type, full, meta) {
                        return '<button class="btn btn-secondary btn-sm mr-2" onclick="funManageMaster(' + full.Id + ')" >Edit  &nbsp; <i class="fas fa-pen"></i></button>' +
                            '<button class="btn btn-danger btn-sm" onclick="funDeleteMaster(' + full.Id + ')" >Delete  &nbsp; <i class="fas fa-trash"></i></button>';
                    }
                }
            ],
            fixedHeader: true,
            responsive: true,
            scrollCollapse: true,
            scrollY: '50vh',
            scrollX: true,
            deferRender: true,
            scroller: true,
            autoWidth: true,
            searching: false,
            pageLength: 10,
            lengthChange: false,
            layout: {
                topStart: {
                    buttons: []
                },
                bottom: ['paging'],
                bottomStart: null,
                bottomEnd: null,
            }
        });
    }

    function funManageMaster(_id) {

        $.ajax({
            url: '@Url.Action("ManageMaster", "Master")',
            type: 'GET',
            dataType: 'html',
            data: {
                typeId: '@typeId',
                id: _id,
            },
            success: function (data) {
                $("#divCommonModel").html('');
                $("#divCommonModel").html(data);
                myModal.show();
            },
            error: function (error) {
            }
        });
    }

    function funDeleteMaster(_id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to delete this record? This action cannot be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteMaster", "Master")',
                    type: 'GET',
                    dataType: 'json',
                    data: {
                        id: _id,
                    },
                    success: function (response) {
                        if (response.result) {
                            funGridMaster();
                            Swal.fire({
                                title: 'Success!',
                                text: response.msg,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (response) {
                        Swal.fire('Error', 'Something went wrong!', 'error');
                    }
                });
            } else {
                Swal.fire('Cancelled', 'Your data is safe', 'info');
            }
        });
    }
</script>